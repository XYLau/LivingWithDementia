{
  "story":{
    "title":"Living With Dementia",
    "author":"Lau Xing Yi (A0114573J)",
    "description":"Live the life of a dementia-ridden old lady as she fumbles through her daily life. As she struggles to remember the people around her and attempt to complete tasks that were once simple and routine in her life, experience her world and peek at the facets of her life as she remembers it. \n\nShedding light on the life of a caregiver and her ward, this story was written referencing true stories and personal experiences in hopes of creating greater awareness about living with dementia.\n\nGitHub Respository: https://github.com/XYLau/LivingWithDementia",
    "metadata":{
      "comments":"This story is told in second-person POV, as a form of Role play described in Mawhorter\u2019s \u201cTowards a Theory of Choice Poetics\u201d. The intended effect of the daily conflicts and events, is to induce emotional agency such that the player would feel the confusion and loneliness that the dementia-ridden old woman has to live through day by day. Dialogue choices are used in depicting key events that occur (these are denoted in the node titles as DC#) to give the players a better idea on what would be said, reducing the chance of misrepresentation of what the action is intended to do. This is similar to what happens in Mass Effect presented in Sendar Sali\u2019s paper, \u201cPlaying with Words.\nTo allow the players to feel that their choices have an impact on the story, choices that the player makes mostly fall into 2 categories, to build up their character and false choices, which are used to bring the subsequent events into the story. The use of false choices also provides an illusion of choice (similar to Agency of Illusion in the Tanenbaum\u2019s reading). Of which, there are 2 main personalities that the player can adopt, an aggressive old woman who is vicious and often fights back, or a submissive woman who rarely complains and takes abuses. These are stored as facts in the story to keep track on the player\u2019s character-related selections. As per Ah Ma\u2019s personality, if she were to adopt a majority aggressive behaviour, the other characters would interact in a much more aggressive level in retaliation. If she were to adopt a submissive personality, her responses will be demurer and the maid would bully her. \nSelections in this story is mostly represented either as verbal dialogue or specific actions. Referencing Sedar Sali\u2019s \u201cPlaying with Words\u201d, the reason for this choice is to firstly, create both a sense of attachment by increasing the player\u2019s involvement in the story while maintaining the realism of day-to-day conversation and actions, and secondly, allowing the writer to direct interactions, especially actions. \n\n(339 words)",
      "readerStyle":"standard",
      "backDisabled":true,
      "restartDisabled":false
    },
    "nodes":[{
      "id":3,
      "name":"Introducing Grandma",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nLive the life of a dementia-ridden old lady as she fumbles through her daily life. As she struggles to remember things that happen around her and attempt to complete tasks that were once simple and routine in her life, experience her world and peek at the facets of her life as she remembers it. \n\nShedding light on the life of a caregiver and her ward, this story was written referencing true stories and personal experiences in hopes of creating greater awareness about living with dementia.\n\n--------------------------------------------\n\nBegin\n\n",
        "rulesets":[{
          "id":8,
          "name":"Begin",
          "start":583,
          "end":589,
          "rules":[{
            "id":8,
            "name":"Begin",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            }]
          }]
        },{
          "id":62,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":104,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":63,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":105,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":true,
      "rules":[]
    },{
      "id":29,
      "name":"Wet (Aggression Effect #2)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nSitting alone in the bathroom, you attempt to brush your teeth. For some reason or another, your toothbrush keeps slipping off.\n\nTry to listen for the maid\n\nFill the cup with water\n\nCall the maid for help\n\nCall the maid for help\n\nCall the maid for help\n\nEat breakfast and hobble back to the room\n",
        "rulesets":[{
          "id":167,
          "name":"Next",
          "start":296,
          "end":338,
          "rules":[{
            "id":290,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":18
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":291,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":172,
          "name":"Action = 3 --> 4",
          "start":272,
          "end":295,
          "rules":[{
            "id":304,
            "name":"Update response for Action = 4 (Submissive)",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"After what seems like a really long time, she's finally back with your clothes. Her rough hands grabs anything she wants. Feeling violated, you had no choice but to rely on her. Afterall, your hands are too clumsy to even dress yourself and no one else is at home to help you. Holding back tears, you endure the abuse, telling yourself that you must remember to tell your daughter when she's home. You must. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":305,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":306,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":332,
            "name":"Update response for Action = 4 (Aggresive)",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"After what seems like a really long time, she's finally back with your clothes. Her rough hands grabs anything she wants. Annoyed, you slap her hands off and threaten to oust here when your daughter is back. She smirks and rattles off that you're just a silly old woman who can't even remember things. Gritting your teeth together, you tell yourself that you must remember to tell your daughter when she's home. You must. This cocky maid must go. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":173,
          "name":"Action = 2 --> 3",
          "start":248,
          "end":271,
          "rules":[{
            "id":307,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You holler again. This time round, you hear her grumbles. She walks over to you and exclaims \"Oh my god. What have you done this time? How can you be so stupid to get yourself all wet.\"\n\nEmbarrased, your head hung low as she tears your clothes off you. Leaving you to sit there wet and naked, you tremble as a small breeze whips through the bathroom. \n\n\"Is she back yet? I'm cold...\" you thought to yourself.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":308,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":309,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":174,
          "name":"Action = 1 --> 2",
          "start":224,
          "end":247,
          "rules":[{
            "id":310,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Wet and afraid, you call the maid for help. Strangely, she doesn't come running. You keep calling, your hoarse voice echoing through a seemingly empty house. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":311,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":312,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":175,
          "name":"Action = 0 --> 1",
          "start":199,
          "end":223,
          "rules":[{
            "id":313,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your fingers finally manage to grab the handle of the tap and water starts gushing out. You fill your cup with water and lift it up. But your fingers slip, and the whole cup of water overturns itself onto you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":314,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":315,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":176,
          "name":"Action = -1 --> 0",
          "start":171,
          "end":198,
          "rules":[{
            "id":316,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":" You turn to look for the maid for help, but that woman is nowhere to be found. Suddenly, you hear the faint sound of someone rummaging through some plastic bag. Worried that the maid is stealing your things, you try to washup quickly. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":317,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":177,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":318,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":178,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":319,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":22,
      "name":"Hospital 2 (DC #2-2) (Aggression Effect #1)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nYou wake up to a sharp poke on your left. A strange guy in white smiles meancingly at you. The youngling next to him hands him a needle. You shy away from that evil man. You still get pricked anyway. As the vial fills with blood, you mumble to yourself, \"Suck suck suck. Everyday also poke me. I hate all these vampires!\"\n\nTurn Away\n\nOption 1: \"Better that I die that have to suffer through scolding everyday\"\nOption 2: \"...\"\n\nAggression\n \nGo home",
        "rulesets":[{
          "id":116,
          "name":"Next",
          "start":482,
          "end":489,
          "rules":[{
            "id":215,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            }]
          },{
            "id":240,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":121,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":220,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":122,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":221,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":135,
          "name":"Action = -1 --> 0",
          "start":365,
          "end":375,
          "rules":[{
            "id":237,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"The evil man is back. He starts a long lecture. So boring. \"... be careful... your heart condition.\" You nod your head and mumble, \"Yeah yeah\". That earns you a smack by your daughter. The doctor reminds that your blood cannot clot easily so any bleeding might bleed you out and you might die. \"... lucky that you didnt fracture your hips this time...\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":238,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":138,
          "name":"Action = 0 --> 1, Option 2: Silent",
          "start":452,
          "end":468,
          "rules":[{
            "id":244,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You stay silent as a fresh wave of scoldings come your way again. Just because you do not take good care of yourself. \n\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":245,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":246,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":139,
          "name":"Aggression Text",
          "start":469,
          "end":480,
          "rules":[{
            "id":247,
            "name":"Aggression Text",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"NOT like *wheeze* I DO it *wheeze* ON purpose *wheeze* RIGHT???* You bellowed.\n\nYour daughter gives you a deadly glare. You should have know better than to cause a commotion. Looks like you'll get into trouble when you get home. \n\nClearing his throat, the doctor pretends nothing happened and refers your daughter to the nurse. The nurse recommends hiring a maid at home, seeing that it's not the first time you've fell in the past month. Elderly are very frail and there should be someone at home looking after you when your daughter goes out to work.\n\nYou silently think to yourself, \"What a liar. This is the first time I've fell. She just wants to get a commission out of it.\" Your daughter starts to ask something related to money. You tune them out and take a snooze.\n\n\nSuddenly, someone shakes you awake. Your daughter informs you that you have been discharged. Time to go home!\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":248,
            "name":"Non-Aggression Text",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"The doctor refers your daughter to the nurse. The nurse recommends hiring a maid at home, seeing that it's not the first time you've fell in the past month. Elderly are very frail and there should be someone at home looking after you when your daughter goes out to work.\n\nYou silently think to yourself, \"What a liar. This is the first time I've fell. She just wants to get a commission out of it.\" Your daughter starts to ask something related to money. You tune them out and take a snooze.\n\nSuddenly, someone shakes you awake. Your daughter informs you that you have been discharged. Time to go home!\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":249,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":181,
          "name":"Action = 0 --> 1, Option 2: Silent",
          "start":376,
          "end":452,
          "rules":[{
            "id":322,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Better that I die than have to suffer through scoldings everday\", you retort. A fresh wave of scoldings come your way again. Just because you do not take good care of yourself. \n\n\"NOT like *wheeze* I DO it *wheeze* ON purpose *wheeze* RIGHT???*\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":323,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":324,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":16,
      "name":"Maid Agency",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nYour daughter knocks on your door, dresses you and puts you on your wheelchair. She flags a cab and you find yourself very much confused about what's going on. Along the way, she reminds you that if you chase this maid away, you'll get thrown into the nursing home. \n\n\"Sigh.. why is my own daughter treating me this way..\", you lament in the deep crevices of your heart.\n\nThe taxi stops in front of a building. You feel a sense of deja vu. Before you can put your finger to it, your daughter pushes you into an office. Your daughter takes a seat in one of the tiny office rooms. She starts talking to a woman with too much perfume on. She rattles off in English and you furitively glance at the TV in the corner, hoping to catch the 8PM drama on the madarin channel. The TV is talking about some Japanese tour instead. \n\n\"Strange. The lawyer is suppose to confront the killer today.\", you think to yourself. You hope that you'll get home in time to catch that.\n\nTurn to watch the TV\n\nSigh\n\nGo to your room and sleep\n",
        "rulesets":[{
          "id":26,
          "name":"Next",
          "start":1032,
          "end":1058,
          "rules":[{
            "id":28,
            "name":"Next: Day 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":20
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":1
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                },
                "userOperand1":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":255,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":119,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":218,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":120,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":219,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":141,
          "name":"Action = 0 --> 1",
          "start":1026,
          "end":1031,
          "rules":[{
            "id":252,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Stiffling a sigh, you turn your eyes away from this montrosity.\n\n\"Why does my life feel like a tragedy?\", you sigh as you think to yourself.\n\nYour daughter chats happily with the maid as they left the maid agency. \n\n\"Why does it feel like I'm the outsider here?\", you think to yourself.\n\nFumbling into the cab, you can't wait to get home and sleep this nightmare away.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":253,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":254,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":184,
          "name":"Action = -1 --> 0",
          "start":1004,
          "end":1025,
          "rules":[{
            "id":327,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"After what seems like an hour, the perfume woman beams and gestures towards someone. A young girl runs out and greets you. You nod at her and go back to watch the Japanese women soak in a hot spring. You can't remember if you had taken a shower. You timidly tap on your daughter's shoulder to ask. She brushes you aside.\n\nYou watch as your daughter signs your freedom away. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":328,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":20,
      "name":"Day 3 New (DC #3)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nIn the darkness of your room, you fumble around, trying to find a comfortable position. Resting your arm above your forehead, you finally feel some relief from the soreness of your arm. You shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nWalk to the bathroom\n\nTake a seat in the bathroom\n\nTake your toothbrush\n\nOption 1: \"That's the wrong one\"\nOption 2: \"...\"\n\nOption 1: \"It was an accident!\"\nOption 2: \"...\"\n\nQuickly brush your teeth",
        "rulesets":[{
          "id":92,
          "name":"Next",
          "start":481,
          "end":505,
          "rules":[{
            "id":169,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":29
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":170,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":93,
          "name":"Action = 0 --> 1",
          "start":289,
          "end":308,
          "rules":[{
            "id":171,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You fumble into your blue slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":172,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":173,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":94,
          "name":"Action = 1 --> 2",
          "start":309,
          "end":330,
          "rules":[{
            "id":174,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Carefully grabbing onto the handrails, you shuffle down the stairs and hobbled to the bathroom. The maid leaves you alone to hobble your way. Upon hearing your daughter's footsteps, she suddenly grabs your arm and courteously guide you to the toilet.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":175,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":176,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":95,
          "name":"Action = 2 --> 3",
          "start":331,
          "end":359,
          "rules":[{
            "id":177,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Heaving a sigh, you take a seat on the bathroom bench.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":178,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":179,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":96,
          "name":"Action = 3 --> 4",
          "start":360,
          "end":381,
          "rules":[{
            "id":180,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Sliding open the cabinet, you see two toothbrushes, blue and pink. The maid takes the blue one. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":181,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":182,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":97,
          "name":"Action = 4 --> 5, Option 1: Blue",
          "start":382,
          "end":415,
          "rules":[{
            "id":183,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"That's...\" \n\nYour daughter suddenly pops up beside you. She turns around and scolds Grace as well. For not knowing anything and always messing things up. \"You've been here for 1 month already!\", your daughter screams. You wonder how is it possible that a day suddenly became 1 month.\n\nThe blue brush is used to scrub the toilet. This isn't the first time already. Dropping the brush like a scalding kettle, the maid blames you and grab the pink brush.  You secretly try to scrub all the toilet out of your mouth. Your daughter starts a long lecture about getting sick and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for the maid one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":184,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":185,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":98,
          "name":"Action = 4 --> 5, Option 2: Pink",
          "start":415,
          "end":431,
          "rules":[{
            "id":186,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. She turns around and scolds Grace as well. For not knowing anything and always messing things up. \"You've been here for 1 month already!\", your daughter screams. You wonder how is it possible that a day suddenly became 1 month.\n\nThe blue brush is used to scrub the toilet. This isn't the first time already. Dropping the brush like a scalding kettle, the maid blames you and grab the pink brush.  You secretly try to scrub all the toilet out of your mouth. Your daughter starts a long lecture about getting sick and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for the maid one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":187,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":188,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":99,
          "name":"Action = 5 --> 6, Option 1: Convince",
          "start":432,
          "end":464,
          "rules":[{
            "id":189,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"It was an accident! I didn't do it anything! It's the maid!\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault!\"\n\nEnraged, she stomps out of the house and slams the main door. The maid turns to glare at you once the door is closed. This one looks like the mean and vengeful kind. You should keep an eye on her. In case she tries something funny and get you into trouble.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":190,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":191,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":100,
          "name":"Action = 5 --> 6, Option 2: Silent",
          "start":464,
          "end":480,
          "rules":[{
            "id":192,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You watch warily as she packs her bag and leaves the house for work. The maid turns to smirk at you once the door is closed. This one looks like the mean and vengeful kind. You should keep an eye on her. In case she tries something funny and get you into trouble.\n\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":193,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":194,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":102,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":197,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":103,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":198,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":185,
          "name":"Action = -1 --> 0",
          "start":275,
          "end":288,
          "rules":[{
            "id":329,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. Your daughter fumbles around the cabinets near your bed, finding your walking stick.  \n\n\"Grace! Help Ah Ma go to the toilet to wash up. Hurry up ah! Don't take your own sweet time.\"\n\nThe maid pushes you up from the bed. Your daughter passes the walking stick to her and walks out. You are left alone with the maid. \n\n\"... ^%^#&$^@*... No coffee... *&S*%^ Dirty... *&S*%^ Stupid... \", the maid mumbles. \n\nYou try to understand what the maid is saying but English is terribly difficult for you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":330,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":14,
      "name":"Hospital 1 (DC #2-1)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nThe entrance to the hospital looms ahead. Somehow this place looks really familiar. The taxi jerks to a stop. Your daughter opens the door and runs for a wheelchair. The glass doors slides opens with a whoosh. Two younglings run up to you and your daughter. The prettier one walks towards you. She asks you for your name.\n\nOption 1: \"Your Ah Ma\"\nOption 2: \"I can't remember\"\n\n\n \n\nTime to take a small nap. \n\n",
        "rulesets":[{
          "id":90,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":167,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":91,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":168,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":110,
          "name":"Name",
          "start":365,
          "end":388,
          "rules":[{
            "id":207,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":230,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":115,
          "name":"Option 2",
          "start":388,
          "end":417,
          "rules":[{
            "id":214,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":231,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":131,
          "name":"Next",
          "start":422,
          "end":449,
          "rules":[{
            "id":232,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":22
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":234,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":132,
          "name":"Hide",
          "start":419,
          "end":421,
          "rules":[{
            "id":233,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You open your mouth to say, but your daughter suddenly returns and interupts you. As they continue to chatter gibberish in English, you stiffle a yawn. Your eyes flutter shut.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":26,
      "name":"Salt",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nFinally! That buffalo of a maid remembered that you haven't had lunch! \n\nThe maid walks in with a bowl of greyish oatmeal, its contents sloshing slimily across the edges of the plastic bowl. She slams it down on the bedside table and motions for you to eat. Gingerly picking up a spoon, you take a bite. URGH. DISGUSTING. There's no flavour at all!\n\nClosing your fist you make an up and down motion. The maid gives you a questioning look. You fetch a spoonful of the oatmeal and deliver it to her mouth. She grimace. You make the shaking motion again. Her brows uncreases themselves as she finally gets it. \n\nShe walks out for a minute and before long, come back bearing the saviour of the day. Salt. \n\nHow much salt should you add?\n\n+ salt amount scoops - \n\n\nEat it\n\n",
        "rulesets":[{
          "id":149,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":266,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":150,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":267,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":151,
          "name":"Next",
          "start":802,
          "end":809,
          "rules":[{
            "id":268,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":28
                }
              }
            }]
          }]
        },{
          "id":154,
          "name":"salt-",
          "start":797,
          "end":798,
          "rules":[{
            "id":271,
            "name":"decrease",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":7
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":7
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":7
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"-"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          }]
        },{
          "id":155,
          "name":"salt amount",
          "start":778,
          "end":789,
          "rules":[{
            "id":272,
            "name":"new rule",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":7
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":156,
          "name":"salt+",
          "start":776,
          "end":777,
          "rules":[{
            "id":273,
            "name":"new rule",
            "stopIfTrue":false,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":7
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":7
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":7
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":28,
      "name":"Getting caught (obviously)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nSatisified with lunch, you sit back and watch TV for the rest of the day, waiting for your daughter to come back. \n\nThe jangle of keys and the slam of the door annouces her arrival. You brace yourself for the daily onslaughter of scolding. With a stoic expression, she asks you to come out and take a seat at the dining table. You hobble out, hungry for dinner. \n\nTo your surprise, the table was void of any food. You throw a questioning look at her. Her laser eyes glare down at you and she says the death-words. \n\n\"Tell me what you did wrong today.\"\n\nFlinching, you try to recall what you had done for the whole day. What do you tell her?\n\nOption 1: Explain the problem with the brushes this morning\nOption 2: Confess about the salt\n \n\nHide inside your room",
        "rulesets":[{
          "id":161,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":281,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":162,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":282,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":163,
          "name":"Choice A Result",
          "start":777,
          "end":779,
          "rules":[{
            "id":283,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Mmhmm. Any more?\" Her fingernails are tapping on the table in fervor. Nervous, your fidgeting fingers freeze beneath the table. Deadly silence fills the void. \n\nTaking a deep breathe, you reply, \"What do you want me to say? Be quick about it. I'm hungry\". She slowly looks up at you. In her hands is the salt shaker. You instantly shrink back and gulp. \n\n\"She knows. How in the world would she know??? Only me... and the maid. The maid knows. The maid told her!\" Joining the dots, you figure out who ratted you out. Furious, you swerve your head and the culprit's smirking face looms into view. \n\nFurious, you point your fingers at her and rat her out as well. \"She was the one who passed it to me. She also use the house phone to call someone and complain about you!\"\n\nInstantly, the fire has been redirected to another target board. Chucklling to yourself, you clap yourself on the back for being smart enough to turn the tables around. A quarrelling battle soon begins and you decide that its safer to hide inside your room. Just in case. \n\nAs you turn to go, your daughter stops you and ask you about the bruise on your neck. Strange, a nagging though tickles your mind as you remember that there's something important that you must tell your daughter but you can't remember. You tell her that you don't know and hurriedly scuttle away.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":284,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"I added salt for lunch. But the maid was the one that gave it to me! I didn't get it myself. She was the one who passed it to me!\"\n\n\"Mmhmm. Any more?\" Her fingernails are tapping on the table in fervor. Nervous, your fidgeting fingers freeze beneath the table. Deadly silence fills the void. \n\nTaking a deep breathe, you reply, \"What do you want me to say? Be quick about it. I'm hungry\". She slowly looks up at you. In her hands is the salt shaker. You instantly shrink back and gulp. \n\n\"She knows. Lucky I confess first if not really gone case already! How in the world would she know??? Only me... and the maid. The maid knows. The maid told her!\" Joining the dots, you figure out who ratted you out. Furious, you swerve your head and the culprit's smirking face looms into view. \n\nFurious, you point your fingers at her and rat her out as well. \"She was the one who passed it to me. She also use the house phone to call someone and complain about you!\"\n\nInstantly, the fire has been redirected to another target board. Chucklling to yourself, you clap yourself on the back for being smart enough to turn the tables around. A quarrelling battle soon begins and you decide that its safer to hide inside your room. Just in case. \n\nAs you turn to go, your daughter stops you and ask you about the bruise on your neck. Strange, a nagging though tickles your mind as you remember that there's something important that you must tell your daughter but you can't remember. You tell her that you don't know and hurriedly scuttle away.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":164,
          "name":"Choice A, Option 2",
          "start":744,
          "end":777,
          "rules":[{
            "id":285,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":286,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":165,
          "name":"Choice A, Option 1",
          "start":684,
          "end":744,
          "rules":[{
            "id":287,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":288,
            "name":"Hide ",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":166,
          "name":"Next",
          "start":780,
          "end":801,
          "rules":[{
            "id":289,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":27
                }
              }
            }]
          },{
            "id":331,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":27,
      "name":"Quarrels",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nAmidst the chaos outside, you hear your daughter telling the maid to pack up all her things. \"You are an adult. She cannot think properly, she's like a chilld but you should know better. How can I trust you to take care of her if you can't even follow my instructions. That's it. I'm sending you back to the agency.\" she told the maid. The door slams and it was a long while before the key jingle and the front door opens again. \n\nLate into the night, your daughter pushes open your door. The maid is nowhere to be seen. She walks over and take a seat on your bed. She asks you, \"What more do you want?\"\n\nOption 1: Nothing!\nOption 2: No scoldings\n \n",
        "rulesets":[{
          "id":152,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":269,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":153,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":270,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":158,
          "name":"Choice A, Option 2",
          "start":666,
          "end":689,
          "rules":[{
            "id":276,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":277,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":159,
          "name":"Choice A, Option 1",
          "start":647,
          "end":666,
          "rules":[{
            "id":278,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":279,
            "name":"Hide ",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":157,
          "name":"Choice A Result",
          "start":689,
          "end":691,
          "rules":[{
            "id":274,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Nothing!\" you repllied. \"But your actions tell me otherwise. Everyday I come home from work, you give me new pattern. I'm very tired already. You think I'm very free, but every night I come back I still got to do work. Late into the night everyday. Early morning when I wake up, I've got to settle all your food and the maids, clean up the house befiore I can leave for work.\n\nEvery night I come home, I hear complains about you. Fall down, ownself try to walk out of the house, sneak expired food to eat, smacking the maid. The last maid said you hit her so she hit you back. I'm so tired aleready. Whenever I ask you what happen, you either blame the maid or you just tell me - Sorry. I won't do it again or you tell me everyday you get scolded you want to die already. We talk, you promise but then the whole cycle repeats itselff again and again. \n\nI give up already. Tomorrow, I'll resign from work. I'll stay at home and take care of you. That's what you really want isn't it. I can't trust anyone to take care of you anymore. \"\n\nHer tears fill her eyes. It's been a long time since you've taken a good look at her. White hair streaked across her head. Her face was now filled with wrinkles. Her eyes looks so tired, under those huge saggy eyebags. Fat salty teardrops streaked down her face. Before you know it, your eyes blur with tears. \n\n\"I can't remember anything. I don't know what to do either. I can't control me. I don't want to hurt you. Why am I like that?\" \n\nShe comes over and gives you a hug. Both of you embrace each other for a long while. \n\n\n** The End **\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":275,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"No scoldings. I keep getting scolded everyday. I hate it.\" you repllied. \n\n\"Everyday I come home from work, you give me new pattern. I'm very tired already. You think I'm very free, but every night I come back I still got to do work. Late into the night everyday. Early morning when I wake up, I've got to settle all your food and the maids, clean up the house befiore I can leave for work.\n\nEvery night I come home, I hear complains about you. Fall down, ownself try to walk out of the house, sneak expired food to eat, smacking the maid. The last maid said you hit her so she hit you back. I'm so tired aleready. Whenever I ask you what happen, you either blame the maid or you just tell me - Sorry. I won't do it again or you tell me everyday you get scolded you want to die already. We talk, you promise but then the whole cycle repeats itselff again and again. \n\nI give up already. Tomorrow, I'll resign from work. I'll stay at home and take care of you. That's what you really want isn't it. I can't trust anyone to take care of you anymore. \"\n\nHer tears fill her eyes. It's been a long time since you've taken a good look at her. White hair streaked across her head. Her face was now filled with wrinkles. Her eyes looks so tired, under those huge saggy eyebags. Fat salty teardrops streaked down her face. Before you know it, your eyes blur with tears. \n\n\"I can't remember anything. I don't know what to do either. I can't control me. I don't want to hurt you. Why am I like that?\" \n\nShe comes over and gives you a hug. Both of you embrace each other for a long while. \n\n** The End **\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":23,
      "name":"Memories",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nTears in your eyes, you recall the times you've lived through from a long long time ago. \n\nBack when your husband was still alive, your family of four was living in poverty from the meagre income your husband earned from being a carpenter's apprentice. To make ends meet, you had to work in a clothing factory in the day and pick up some odd jobs in the night. Though life was tough, together with your husband, the both of you managed to scrimp and save some money to send your children to school. \n\nMany years of sewing in the dark, lifting and carrying eventually took its toll on your body. You had to squint hard to even make sense of anything. Your hands were coarse and swollen from all the sewing and washing that you had to do. Your husband had to spend majority of the time in bed, no thanks to the labourous nature of his work. Determined to put your children through school so that they would not end up like you or your husband, you pushed yourself harder, earning any and every bit of money you could get your hands on. \n\nReminisce",
        "rulesets":[{
          "id":127,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":226,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":126,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":225,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":142,
          "name":"Next",
          "start":1078,
          "end":1087,
          "rules":[{
            "id":259,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":24
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":21,
      "name":"The Prodigal Son",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nThe white little block shivers and sing a song. Curious to see who has called, you flip it over and click the green Call button. A raspy voice demands for you. Curious, you stick the phone nearer towards your face and peek at the bright box. \n\nA bald middle-aged uncle looms into the screen. He merrily asks about your health and how you've been so far. You snort. \n\n\"WHY? NEED MONEY AGAIN? Gambled it all away? No need to call to check if I'm dead yet. EVEN IF I DIE I ALSO WON'T LEAVE A SINGLE CENT TO YOU. You heartless dog! I don't have a son like you!\"\n\nFuming, you slam the phone down until all that you could hear was the steady beep of the dial tone.\n\nCheck to make sure the phone isn't broken\n",
        "rulesets":[{
          "id":123,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":222,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":124,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":223,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":125,
          "name":"Next",
          "start":702,
          "end":744,
          "rules":[{
            "id":224,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":23
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":18,
      "name":"Phone Call",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nYou sit in your room, confined to the four walls of your prison. The maid retorts, \u201cMa'am always ANGRY ANGRY! ANGRY ANGRY very HAPPY? Also not I make you ANGRY one!\u201d\n\n \n\nThe maid mutters and grudgingly takes the potty off the commode and walks out of the room. As you slowly make your way back to your bed, you hear someone talking on the phone outside. Just as you pressed your ear against the door, your stomach grumbles a little. You recall that you haven\u2019t had lunch yet.\n\nOption 1: Open the door a little to hear\nOption2: Get your hidden stash of food\n\n \n\nNext\n",
        "rulesets":[{
          "id":104,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":199,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":105,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":200,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":106,
          "name":"Aggression Words",
          "start":209,
          "end":211,
          "rules":[{
            "id":201,
            "name":"Aggressive",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You scream at her. \n\n\u201cWhole day SCOLD SCOLD SCOLD! You BLACK-hearted woman! I pay money to get scolded by YOU ah? Your kids so poor thing got this kind of mother! If I am your kid, I rather DIE!\u201d\n\nAh. It feels so good. The invisible pressure was miraculously lifted off your chest.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":202,
            "name":"Not Aggressive",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\u201cSorry sorry. Don\u2019t angry. I on the aircon for you?\u201d\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":107,
          "name":"ChoiceA: Option1",
          "start":519,
          "end":560,
          "rules":[{
            "id":203,
            "name":"ChoiceA: Option1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":257,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":108,
          "name":"ChoiceA: Option2",
          "start":560,
          "end":599,
          "rules":[{
            "id":204,
            "name":"ChoiceA: Option2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":258,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":109,
          "name":"ChoiceA Result",
          "start":600,
          "end":602,
          "rules":[{
            "id":205,
            "name":"ChoiceA Result",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Hobbling to the door, you silently inch the door open to let in a small crack. \n\n\u201c\u2026 This grandma \u2026 terrible \u2026 no money\u2026. Useless! \u2026 always scolds me\u2026\u201d\n\n\"What a liar.\", you mumble to yourself.\n\nMinutes later, you hear footsteps by the door. Quietly, you quickly make your way back into bed. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":206,
            "name":"ChoiceA Result",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Hobbling as fast as your useless feet can carry you, you pull open the cabinet hidden behind the door. You rummage under a pile of mooncake tins and cloth bags. Pushing your hand in further, you hear the crinkling sounds of a little red plastic bag. Dragging the bag out full of triumph, you peel a small piece from the bread and put the rest back into the bag. Savouring the taste of bread on your lips, you lose yourself in this little moment of heavenly bliss. Minutes later, you hear footsteps by the door. Shoving the plastic bag back into the cupboard, you quickly scuttle back into bed. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":111,
          "name":"Next",
          "start":603,
          "end":608,
          "rules":[{
            "id":208,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":21
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":256,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":4,
      "name":"Day 1",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nIn the darkness of your room, you fumble around, trying to find a comfortable position. Resting your arm above your forehead, you finally feel some relief from the soreness of your arm. You shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nWalk to the bathroom\n\nTake a seat in the bathroom\n\nTake your toothbrush\n\nOption 1: The Blue one\nOption 2: The Pink one\n\nOption 1: Convince her it's not your fault\nOption 2: Stay silent while she continue to vent\n\nEat breakfast and hobble back to the room\n",
        "rulesets":[{
          "id":14,
          "name":"Next",
          "start":522,
          "end":564,
          "rules":[{
            "id":14,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":69,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":27,
          "name":"Action = 0 --> 1",
          "start":289,
          "end":308,
          "rules":[{
            "id":29,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You fumble into a pair of slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":32,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":89,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":29,
          "name":"Action = 1 --> 2",
          "start":309,
          "end":330,
          "rules":[{
            "id":33,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Carefully grabbing onto the handrails, you shuffle down the stairs and hobbled to the bathroom.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":34,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":35,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":30,
          "name":"Action = 2 --> 3",
          "start":331,
          "end":359,
          "rules":[{
            "id":36,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Heaving a sigh, you take a seat on the bathroom bench.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":37,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":38,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":31,
          "name":"Action = 3 --> 4",
          "start":360,
          "end":381,
          "rules":[{
            "id":39,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Sliding open the cabinet, you see two toothbrushes. Which one do you take? \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":40,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":41,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":32,
          "name":"Action = 4 --> 5, Option 1: Blue",
          "start":382,
          "end":405,
          "rules":[{
            "id":42,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. She berates you for using the wrong brush. The blue brush is used to scrub the toilet. Dropping the brush like a scalding kettle, you grab the pink brush and try to scrub all the toilet out of your mouth. Your daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":43,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":44,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":34,
          "name":"Action = 4 --> 5, Option 2: Pink",
          "start":405,
          "end":428,
          "rules":[{
            "id":48,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. She berates you for squishing too much toothpaste. The toothpaste slides off the brush and plops onto the basin. You stare accusingly at the toothpaste as she berates you further. Your daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":49,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":50,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":36,
          "name":"Action = 5 --> 6, Option 1: Convince",
          "start":429,
          "end":472,
          "rules":[{
            "id":54,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"It was an accident! I didn't do it intentionally. Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault!\"\n\nEnraged, she stomps out of the house and slams the main door. Fuming, you take a moment to catch your breath. Suddenly, the main door opens and her head pops out and orders you NOT to step out of the house. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":55,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":56,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":37,
          "name":"Action = 5 --> 6, Option 2: Silent",
          "start":472,
          "end":521,
          "rules":[{
            "id":57,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You watch warily as she packs her bag and leaves the house for work. Just before she closes the main door, she turns behind and orders you NOT to step out of the house. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":58,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":59,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":47,
          "name":"Action = -1 --> 0",
          "start":275,
          "end":288,
          "rules":[{
            "id":87,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. A strange woman fumbles around your cabinets near your bed. You wonder if you should scream for the police. \n\n\"Hurry up and go to the toilet to wash up. I've got to go to work early today. Don't take your own sweet time.\", she speaks.\n\nAs you struggle to place this woman, the fog in your mind finally clears. Ah. My daughter. The nasty one. Not a stranger. Exhausted, you push yourself up from the bed and reach for walking stick drapped at the back of the door. She picks it up and pass it to you and walks out.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":88,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":60,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":102,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":61,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":103,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":17,
      "name":"Day 2 (DC #1)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nAs the sound of the MRTs starting their daily marathons punctuate through the darkness of your room, you fumble around, trying to find a comfortable position. Resting your arm above your forehead, you finally feel some relief from the soreness of your arm. You shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nRush to the bathroom\n\nOption 1: Shout \"HELP ME! HELP ME!\"\nOption 2: Convince yourself \"I Can Do It!\" \n \nOption 1: \"It was an accident!\"\nOption 2: \"I'm sorry.\"\n\nGo to the hospital\n",
        "rulesets":[{
          "id":64,
          "name":"Next",
          "start":540,
          "end":559,
          "rules":[{
            "id":106,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":14
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":107,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":65,
          "name":"Action = 0 --> 1",
          "start":360,
          "end":379,
          "rules":[{
            "id":108,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"The urge to go to the toilet overwhelms you. You fumble into your pink slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":109,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":110,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":66,
          "name":"Action = 1 --> 2",
          "start":380,
          "end":401,
          "rules":[{
            "id":111,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Waddling as fast as you dare, you shuffle down the stairs and hobbled to the bathroom. Unbeknownst to you, your slippers catch on a piece of floormat and your feet give way below you. Collapsed onto a heap on the floor, you need to make a decision about what to do. Fast!\n "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":112,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":113,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":69,
          "name":"Action = 2 --> 3, Option 1: Shout for help",
          "start":402,
          "end":438,
          "rules":[{
            "id":120,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"HELP ME! HELP ME!\"\n\nYour daughter hears the commotion and rushes out half-dressed. You get scolded for not taking care of yourself. "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":121,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":122,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":70,
          "name":"Action = 2 --> 3, Option 2: Try yourself",
          "start":438,
          "end":480,
          "rules":[{
            "id":123,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Come on old girl! You can do it!\"\n\nYou try to get up on your own, but your legs seems like it does not belong to you. To your horror, you realise that you can't feel your legs at all. Terrible thoughts began to cloud your mind as scenes of elderly dying alone without anyone knowing, flash before your eyes. You start shouting for help, hoping your daughter or anyone out there would be able to hear your cries. \n\n\"Save me!\"\n\nAfter what seems like eons later, your daughter hears the commotion and rushes out half-dressed. You get scolded for not asking for help. "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":124,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":125,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":71,
          "name":"Action = 3 --> 4, Option 1: Convince",
          "start":484,
          "end":516,
          "rules":[{
            "id":126,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\n\"It was an accident! *wheeze* I didn't do it *wheeze* on purpose. *wheeze* Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault! I don't need to work already! Get fired by my boss can already! My boss already not happy that I always take urgent leave each time you fall. Still don't learn your lesson. EVERYTIME also wait until FALL already then say ACCIDENT. I NO JOB then you HAPPY already!\"\n\n\"Oh please, this is the first time I fall. Don't lie.\", you thought to yourself.\n\nEnraged, she continues to scold for the entire ride. Between breathless pants and the pain, you pity the taxi uncle who's sliding further and further down his seat, pretending not to exist.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":127,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":128,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":72,
          "name":"Action = 3 --> 4, Option 2: Silent",
          "start":516,
          "end":539,
          "rules":[{
            "id":129,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"I'm sorry. I didn't do it on purpose.\"\n\n\"I don't need to work already! Get fired by my boss can already! My boss already not happy that I always take urgent leave each time you fall. Still don't learn your lesson. EVERYTIME also wait until FALL already then only say SORRY. I NO JOB then you HAPPY already!\"\n\n\"Oh please, this is the first time I fall. Don't lie.\", you thought to yourself.\n\nRaging like a volcano, she continues to scold for the entire ride. Between breathless pants and the pain, you pity the taxi uncle who's sliding further and further down his seat, pretending not to exist.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":130,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":131,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":74,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":134,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":75,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":135,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":76,
          "name":"Action Result: 3",
          "start":482,
          "end":484,
          "rules":[{
            "id":136,
            "name":"Show",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"As she tries to heave you up, a sharp pain stabs through your chest. The sudden impact lands you back on the ground with a solid thump. Each breath that you take feels like a lance puncturing through your chest. Exhausted and frightened, your daughter frantically runs out of the house to call for help. With the help of Uncle Lian and his son, the neighbours next door, they manage to get you onto a taxi. \n\n\"Uncle! TTSH A&E! Hurry Up!\"\n\nThe moment the taxi drives off, she starts. \n\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":77,
          "name":"Action = -1 --> 0",
          "start":346,
          "end":359,
          "rules":[{
            "id":137,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. Your daughter fumbles around the cabinets near your bed, finding your walking stick.  \n\n\"Hurry up and go to the toilet to wash up. I've got to go to work early today. Don't take your own sweet time.\"\n\nExhausted, you push yourself up from the bed and silently point at the walking stick drapped at the back of the door. She picks it up and pass it to you and walks out.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":138,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":13,
      "name":"Dinner (at home)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nMetal jingles against metal. The old wooden door slams. Your daughter is home. Finally.  Fridge door creaks, pots screech, gas lit. The scent of dinner fills the house. You hear the resounding sound of food scooped into the ceremic bowls.Your stomach grumbles. \n\nOption 1: Tentatively walk out and sit at the dining table\nOption 2: Sit and wait for your daughter to call you\n \n\nOption 1: Leave the bowls on the table\nOption 2: Bring the bowls to the basin to wash\n \n\nGo back inside your room and sleep \n",
        "rulesets":[{
          "id":19,
          "name":"Choice A, Option 1",
          "start":305,
          "end":364,
          "rules":[{
            "id":19,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":67,
            "name":"Hide ",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":20,
          "name":"Choice A, Option 2",
          "start":364,
          "end":417,
          "rules":[{
            "id":20,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":68,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":41,
          "name":"Choice B, Option 1",
          "start":420,
          "end":459,
          "rules":[{
            "id":71,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":72,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":42,
          "name":"Choice B, Option 2",
          "start":459,
          "end":506,
          "rules":[{
            "id":74,
            "name":"Choice B, Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":75,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":44,
          "name":"Choice A Result",
          "start":417,
          "end":419,
          "rules":[{
            "id":80,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You heave onto the creaky plastic chair. Taking a huge sigh of relief, you take a look at the dining table. Vegetables again. Sigh. You mindlessly spoon food into your mouth through the awkward silence, punctuated only with the dialogues from the 8PM drama. \n\nThe blockbuster drama last year was the best. The one with the lawyer. The way she uncovered the culprit and cornered him using a toilet plunger was the best scene you've seen on television for a long time. A woman who knows how to kick ass is the best. You picture yourself as that lawyer. Head held high, rebutting your daughter's words. Your imaginary daughter cowers in fear and apologises profusely to you. With a smirk on your face, you point your chopsticks at her and give your best evil laugher. \n\nYour chopsticks grasps air. You look down, only to see the empty bowl staring back at you. Your daughter stares blankly at you. Laughter dies on your lips.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":81,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"DINNER IS READY! STILL NEED TO GET A SEDAN CHAIR TO USHER YOU OUT AH?\"\n\nSulking, you timidly walk to the dining table. You heave onto the creaky plastic chair. Taking a huge sigh of relief, you take a look at the dining table. Vegetables again. Sigh. You mindlessly spoon food into your mouth through the awkward silence, punctuated only with the dialogues from the 8PM drama.\n\nThe blockbuster drama last year was the best. The one with the lawyer. The way she uncovered the culprit and cornered him using a toilet plunger was the best scene you've seen on television for a long time. A woman who knows how to kick ass is the best. You wish you were as brave as she was. Hungry for more, you mindlessly stick your chopsticks into your bowl grabbing the next bite. \n\nYour chopsticks grasps air. You look down, only to see the empty bowl staring back at you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":45,
          "name":"Choice B Result",
          "start":506,
          "end":508,
          "rules":[{
            "id":82,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Eat finish already or not. Hurry up can?? I got work to do one leh! Everyday also like that! You think I very free ah???\"\n\nYou timidly put the rice bowl down on the table and quietly step away.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":83,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"PUT DOWN! You want to break my rice bowl also ah? Want me to lose my job then let's see who pay your medical bill! How many times do I need to tell you...\"\n\nYou quietly put the rice bowl down in the basin and quietly step away. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":46,
          "name":"Next",
          "start":509,
          "end":545,
          "rules":[{
            "id":86,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":85,
            "name":"Next: Day 2",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":17
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":1
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":139,
            "name":"Next: Day 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":16
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":54,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":96,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":55,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":97,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":128,
          "name":"Day repeat",
          "start":42,
          "end":43,
          "rules":[{
            "id":227,
            "name":"Day repeat",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Once again, the familiar sound of m"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":25,
      "name":"Meaning",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nAs your daughter leaves for work each day, you wonder how life would have been different if you had stayed. Minutes turns to hours, days and years had passed. With all the friends and relatives departing one after another from this world, the loneliness never seems to disappear. \n\nAs your only living family goes about scolding you each day, you wonder if there's a meaning to living. Your only solace comes from the dreams that occassionally blesses you with glimpses of the past that you've shared with the people that are long gone. But how long would they last, as more and more memories get stolen away as time passes. Perhaps one day, you would even forget yourself. What then, is the meaning of living for so long?\n\nAs you reside deep within your thoughts, reminising the day you got married to the love of your life among many other precious memories, a rude crash rouses you from your thoughts. \n\nSee what happened",
        "rulesets":[{
          "id":146,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":262,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":147,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":263,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":148,
          "name":"Next",
          "start":949,
          "end":966,
          "rules":[{
            "id":265,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":26
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":24,
      "name":"Memories Continued",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nAlas, your body eventually broke down. Pinning your hopes on your eldest son, you counted on him to support you and your husband. The first few years was good. He would bring his salary home from work. For the first time of your life, you didn't have to worry about paying the bills and having a roof over your head.\n\nHowever, this black-hearted man turned on you when you least knew it. He had gambled away all his money and spent it all on cigarettes and alcohol. Alas, when the money ran out, he decided to steal your coffin-savings, money set aside for your funeral when the time comes. Feeble and weak, your bed-ridden husband tried to stop him, but that earned him a shove to the ground instead. Unable to fend for himself, your husband was left lying on the ground for a greater part of the day, until your daughter came home from work. \n\nWithin the course of the week, you never saw your son again. Your husband, perhaps owing to shock and disappointment, left the world. You had to resort to borrowing money from your relatives and friends to hold a simple wake for your husband. Your black-hearted son did not even come to send him off. Vengeful and determined, your daughter packed whatever she could get her hands on and together with you, immigrate to Singapore. \n\nThe land far away from home",
        "rulesets":[{
          "id":143,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":260,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":144,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":261,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":145,
          "name":"Next",
          "start":1320,
          "end":1347,
          "rules":[{
            "id":264,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":25
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":11,
      "name":"Clock",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nBack in your room, you sit on your bed and wait for time to pass. \n\nNothing happens.\n\nLook at the clock \n\n",
        "rulesets":[{
          "id":38,
          "name":"Look at the clock",
          "start":128,
          "end":145,
          "rules":[{
            "id":60,
            "name":"Clock",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":6
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":73,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":7
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Continue listening to your life tick away"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            },{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":13
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":39,
          "name":"Clock Result",
          "start":110,
          "end":127,
          "rules":[{
            "id":61,
            "name":"Clock 1, 4 (Bruise)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You play with the little purplish-green spot on your arm. \n\nThis looks new. \n\nPressing it down, the little spot turns white before turning purple again. \n\nThis is fun. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":62,
            "name":"Clock 0, 2 (Toilet)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You hobble your way to the toilet and contemplate about life. \n\nWaddling back to your room, your stomach protests and you wonder if you had lunch yet. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":63,
            "name":"Clock 3,  5 (Food)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Stomach grumbling, you open your bedside cabinet and raid for some crackers.\n\nBelly full and satisfied, you quickly hide the food back into the drawer. \n\n\"Thank goodness I'm smart enough to keep some food here. Else, I would have starved long ago.\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":64,
            "name":"Clock 6 (Phone)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You wonder why your daughter isn't back from work yet.\n\nDistracted, your fingers play with the white little block that shivers and sing a song once in a while.\n "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":140,
            "name":"Clock 7 ()",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":7
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"AHA! It's 5 o'clock! Time for my favourite show!\"\n\nYou switch on the TV and catch the latest episode of the soap drama. \n\n\"How can she hit her mother! If that wretched girl was my daughter I would have slapped her long ago. Hmph!\", you think to yourself.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":58,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":100,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":59,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":101,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    }],
    "facts":[{
      "id":7,
      "name":"Salt",
      "type":"int",
      "initialValue":1
    },{
      "id":3,
      "name":"Node Action",
      "type":"int",
      "initialValue":-1
    },{
      "id":2,
      "name":"DinnerHome_Option",
      "type":"int",
      "initialValue":0
    },{
      "id":6,
      "name":"Counter: Clock",
      "type":"int",
      "initialValue":0
    },{
      "id":1,
      "name":"Counter: Day",
      "type":"int",
      "initialValue":0
    },{
      "id":5,
      "name":"Node ChoiceB",
      "type":"int",
      "initialValue":0
    },{
      "id":4,
      "name":"Node ChoiceA",
      "type":"int",
      "initialValue":0
    },{
      "id":0,
      "name":"Aggression Level",
      "type":"int",
      "initialValue":0
    }],
    "rules":[]
  },
  "plugins":{
    "Default Story Viewer":{
      "zoomLevel":0.7000000000000001,
      "nodes":[{
        "id":22,
        "x":683.7499999999999,
        "y":214.99999999999997
      },{
        "id":16,
        "x":902.3214285714284,
        "y":218.2142857142857
      },{
        "id":29,
        "x":465.71428571428567,
        "y":418.57142857142856
      },{
        "id":3,
        "x":18.928571428571427,
        "y":16.25
      },{
        "id":20,
        "x":242.49999999999997,
        "y":413.74999999999994
      },{
        "id":14,
        "x":469.99999999999994,
        "y":213.74999999999997
      },{
        "id":26,
        "x":1547.1428571428569,
        "y":15.714285714285714
      },{
        "id":28,
        "x":1555.7142857142856,
        "y":211.42857142857142
      },{
        "id":27,
        "x":1567.1428571428569,
        "y":417.1428571428571
      },{
        "id":23,
        "x":1119.8214285714284,
        "y":419.6428571428571
      },{
        "id":21,
        "x":902.1428571428571,
        "y":418.57142857142856
      },{
        "id":18,
        "x":674.6428571428571,
        "y":418.57142857142856
      },{
        "id":4,
        "x":243.74999999999997,
        "y":13.749999999999998
      },{
        "id":17,
        "x":246.24999999999997,
        "y":211.24999999999997
      },{
        "id":13,
        "x":677.4999999999999,
        "y":12.499999999999998
      },{
        "id":25,
        "x":1344.285714285714,
        "y":222.85714285714283
      },{
        "id":24,
        "x":1342.8571428571427,
        "y":419.99999999999994
      },{
        "id":11,
        "x":457.49999999999994,
        "y":13.749999999999998
      }]
    }
  }
}