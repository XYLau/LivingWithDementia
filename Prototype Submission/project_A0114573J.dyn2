{
  "story":{
    "title":"Living With Dementia",
    "author":"Lau Xing Yi (A0114573J)",
    "description":"Live the life of a dementia-ridden old lady as she fumbles through her daily life. As she struggles to remember the people around her and attempt to complete tasks that were once simple and routine in her life, experience her world and peek at the facets of her life as she remembers it. \n\nShedding light on the life of a caregiver and her ward, this story was written referencing true stories and personal experiences in hopes of creating greater awareness about living with dementia.\n",
    "metadata":{
      "comments":"GitHub Respository: https://github.com/XYLau/LivingWithDementia",
      "readerStyle":"standard",
      "backDisabled":true,
      "restartDisabled":false
    },
    "nodes":[{
      "id":20,
      "name":"Day 3 New",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nIn the darkness of your room, you fumble around, trying to find a comfortable position.\n\nResting your arm above your forehead, you finally feel some relief from the soreness of your arm. \n\nYou shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nWalk to the bathroom\n\nTake a seat in the bathroom\n\nTake your toothbrush\n\nIn progress.\n\nOption 1: Tell the maid that it's wrong\nOption 2: The Pink one\n\nOption 1: Convince her it's not your fault\nOption 2: Stay silent while she continue to vent\n\nEat breakfast and hobble back to the room\n",
        "rulesets":[{
          "id":92,
          "name":"Next",
          "start":556,
          "end":598,
          "rules":[{
            "id":169,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":18
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":170,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":93,
          "name":"Action = 0 --> 1",
          "start":292,
          "end":311,
          "rules":[{
            "id":171,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You fumble into your blue slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":172,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":173,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":94,
          "name":"Action = 1 --> 2",
          "start":312,
          "end":333,
          "rules":[{
            "id":174,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Carefully grabbing onto the handrails, you shuffle down the stairs and hobbled to the bathroom.\n\nThe maid leaves you alone to hobble your way. \n\nUpon hearing your daughter's footsteps, she suddenly grabs your arm and courteously guide you to the toilet.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":175,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":176,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":95,
          "name":"Action = 2 --> 3",
          "start":334,
          "end":362,
          "rules":[{
            "id":177,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Heaving a sigh, you take a seat on the bathroom bench.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":178,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":179,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":96,
          "name":"Action = 3 --> 4",
          "start":363,
          "end":384,
          "rules":[{
            "id":180,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Sliding open the cabinet, you see two toothbrushes. \n\nThe maid takes the blue one. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":181,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":182,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":97,
          "name":"Action = 4 --> 5, Option 1: Blue",
          "start":398,
          "end":439,
          "rules":[{
            "id":183,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for using the wrong brush. \n\nThe blue brush is used to scrub the toilet. \n\nDropping the brush like a scalding kettle, you grab the pink brush and try to scrub all the toilet out of your mouth. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":184,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":185,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":98,
          "name":"Action = 4 --> 5, Option 2: Pink",
          "start":439,
          "end":462,
          "rules":[{
            "id":186,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for squishing too much toothpaste.\n\nThe toothpaste slides off the brush and plops onto the basin. \n\nYou stare accusingly at the toothpaste as she berates you further. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":187,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":188,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":99,
          "name":"Action = 5 --> 6, Option 1: Convince",
          "start":463,
          "end":506,
          "rules":[{
            "id":189,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"It was an accident! I didn't do it intentionally. Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault!\"\n\nEnraged, she stomps out of the house and slams the main door. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":190,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":191,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":100,
          "name":"Action = 5 --> 6, Option 2: Silent",
          "start":506,
          "end":555,
          "rules":[{
            "id":192,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You watch warily as she packs her bag and leaves the house for work. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":193,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":194,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":101,
          "name":"Action = -1 --> 0",
          "start":278,
          "end":291,
          "rules":[{
            "id":195,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. \n\nYour daughter fumbles around the cabinets near your bed, finding your walking stick.  \n\n\"Grace! Help Ah Ma go to the toilet to wash up. Hurry up ah! Don't take your own sweet time.\"\n\nThe maid pushes you up from the bed.\n\nYour daughter passes the walking stick to her and walks out.\n\nYou are left alone with the maid. \n\n\"... ^%^#&$^@*... No coffee... *&S*%^ Dirty... *&S*%^ Stupid... \", the maid mumbles. \n\nYou try to understand what the maid is saying but English is terribly difficult for you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":196,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":102,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":197,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":103,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":198,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":18,
      "name":"Phone Call",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nThe maid retorts, \u201cAh Ma always ANGRY ANGRY! ANGRY ANGRY very HAPPY? Also not I make you ANGRY one!\u201d\n\n\u201cWhole day SCOLD ME only! You BLACK-hearted woman! I pay money to get scolded by YOU ah? Your kids so poor thing got this kind of mother! If I am your kid, I rather DIE!\u201d\n\n\u201cSorry sorry. Don\u2019t angry. At most I don\u2019t say anything anymore.\u201d\n\nThe maid mutters and grudgingly takes the potty off the commode and walks out of the room. As you slowly make your way back to your bed, you hear someone talking on the phone outside. Suddenly, your stomach grumbles a little as you recall that you haven\u2019t had lunch yet.\n\nOption 1: Open the door a little to hear\nOption2: Get your hidden stash of food\n\nIF Open the door a little to hear: \nHobbling to the door, you silently inch the door open to let in a small crack. \n\u201c\u2026 This grandma \u2026 terrible \u2026 no money\u2026. Useless! \u2026 always scolds me\u2026\u201d\nMinutes later, you hear footsteps by the door. Quietly, you quickly hobble your way back into bed. \n\nELSE Get your hidden stash of food: \nHobbling as fast as your useless feet can carry you, you pull open the cabinet hidden behind the door and rummage under a pile of mooncake tins and cloth bags. You push your hand in further to until you hear the crinkling sounds of a little red plastic bag. Dragging the bag out full of triumph, you peel a small piece from the bread and put the rest back into the bag. Savouring the taste of bread on your lips, you lose yourself in this little moment of heavenly bliss. \n\nMinutes later, you hear footsteps by the door. Shoving the plastic bag back into the cupboard, you quickly hobble your way back into bed. \n",
        "rulesets":[{
          "id":104,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":199,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":105,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":200,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":3,
      "name":"Introducing Grandma",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nLive the life of a dementia-ridden old lady as she fumbles through her daily life. As she struggles to remember the people around her and attempt to complete tasks that were once simple and routine in her life, experience her world and peek at the facets of her life as she remembers it. \n\nShedding light on the life of a caregiver and her ward, this story was written referencing true stories and personal experiences in hopes of creating greater awareness about living with dementia.\n\n--------------------------------------------\nThe Characters\n--------------------------------------------\n* Law Chun Sum (Ah Ma)\nA 79-year-old woman plagued with many health conditions, including dementia. She is currently staying with her daughter in a HDB flat. She can understand bits of Mandarin but can only communicate in Cantonese. She has been living in Hong Kong for majority of her life and had joined her daughter and her family in Singapore decades ago. \n\n* Lam Teng Yan (Ah Lui)\nAh Ma\u2019s elder daughter and her primary caregiver. She currently works nine-to-five in the office. She has been taking care of her mother for over 2 decades. \n\n* Grace (The Maid)\nA Filipino maid who was recently employed at a maid agency. Her primary duties are to take care of Ah Ma. \n\n--------------------------------------------\n(Remove this)\nDay 1:Toothbrush\nDay 2:Accident+Hospital\nDay 3:Maid+Phone call\nDay 4:Maid+Funeral\nDay 5:Maid+Hospital\nDay 6:Maid+Phone Call\nDay 7:Maid+Salt\n\nBegin\n\n",
        "rulesets":[{
          "id":8,
          "name":"Begin",
          "start":1506,
          "end":1512,
          "rules":[{
            "id":8,
            "name":"Begin",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          }]
        },{
          "id":62,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":104,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":63,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":105,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":true,
      "rules":[]
    },{
      "id":16,
      "name":"Maid Agency",
      "content":{
        "text":"Day: dayNum\n\nYour daughter knocks on your door, dresses you and puts you on your wheelchair. \nShe drives you to the maid agency. Along the way, she reminds you that if you chase this maid away, you'll get thrown into the nursing home. \n\nYour daughter sits in the office talking to a woman with too much perfume on. She rattles off in English and you furitively glance at the TV in the corner, hoping to catch the 9 o'clock drama on the madarin channel. The TV is talking about some Japanese tour instead. Strange. The lawyer is suppose to confront the killer today. You hope that you'll get home in time to catch that.\n\nAfter what seems like an hour, the perfume woman beams and gestures towards someone. A young girl runs out and greets you. You nod at her and go back to watch the Japanese women soak in a hot spring. You can't remember if you had taken a shower. You timidly tap on your daughter's shoulder to ask. She brushes you aside.\n\nYou watch as your daughter signs your freedom away. \n\"Why does my life feel like a tragedy?\", you sigh as you think to yourself.\n\nYour daughter chats happily with the maid as they left the maid agency. \n\n\"Why does it feel like I'm the outsider here.\", you think to yourself.\n\nFumbling into the cab, you can't wait to get home and sleep this nightmare away.\n\nGo to your room and sleep\n",
        "rulesets":[{
          "id":24,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":26,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":26,
          "name":"Next",
          "start":1300,
          "end":1326,
          "rules":[{
            "id":28,
            "name":"Next: Day 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":20
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":1
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                },
                "userOperand1":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":13,
      "name":"Dinner (at home)",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nMetal jingles against metal. The old wooden door slams. \n\nYour daughter is home. Finally. \n\nFridge door creaks, pots screech, gas lit.\n\nThe scent of dinner fills the house. \n\nYou hear the resounding sound of food scooped into the ceremic bowls.\n\nYour stomach grumbles. \n\nOption 1: Tentatively walk out and sit at the dining table\nOption 2: Sit and wait for your daughter to call you\n \n\nOption 1: Leave the bowls on the table\nOption 2: Bring the bowls to the basin to wash\n \n\nGo back inside your room and sleep\n",
        "rulesets":[{
          "id":19,
          "name":"Choice A, Option 1",
          "start":313,
          "end":372,
          "rules":[{
            "id":19,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":67,
            "name":"Hide ",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":20,
          "name":"Choice A, Option 2",
          "start":372,
          "end":425,
          "rules":[{
            "id":20,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":68,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":41,
          "name":"Choice B, Option 1",
          "start":428,
          "end":467,
          "rules":[{
            "id":71,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":72,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":42,
          "name":"Choice B, Option 2",
          "start":467,
          "end":514,
          "rules":[{
            "id":74,
            "name":"Choice B, Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":75,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":44,
          "name":"Choice A Result",
          "start":425,
          "end":427,
          "rules":[{
            "id":80,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You heave onto the creaky plastic chair. \n\nTaking a huge sigh of relief, you take a look at the dining table. \n\nVegetables again. Sigh. \n\nYou mindlessly spoon food into your mouth through the awkward silence, punctuated only with the dialogues from the 8PM drama.\n\nYour chopsticks grasps air. You look down, only to see the empty bowl staring back at you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":81,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"DINNER IS READY! STILL NEED TO GET A SEDAN CHAIR TO USHER YOU OUT AH?\"\n\nSulking, you timidly walk to the dining table. \n\nYou heave onto the creaky plastic chair. \n\nTaking a huge sigh of relief, you take a look at the dining table. \n\nVegetables again. Sigh. \n\nYou mindlessly spoon food into your mouth through the awkward silence, punctuated only with the dialogues from the 8PM drama.\n\nYour chopsticks grasps air. You look down, only to see the empty bowl staring back at you. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":45,
          "name":"Choice B Result",
          "start":514,
          "end":516,
          "rules":[{
            "id":82,
            "name":"Option 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Eat finish already or not. Hurry up can?? I got work to do one leh! Everyday also like that! You think I very free ah???\"\n\nYou timidly put the rice bowl down on the table and quietly step away.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":83,
            "name":"Option 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"PUT DOWN! You want to break my rice bowl also ah? Want me to lose my job then let's see who pay your medical bill! How many times do I need to tell you...\"\n\nYou quietly put the rice bowl down in the basin and quietly step away. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":46,
          "name":"Next",
          "start":517,
          "end":552,
          "rules":[{
            "id":85,
            "name":"Next: Day 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":1
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            },{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":17
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":139,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":16
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":86,
            "name":"Show",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":54,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":96,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":55,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":97,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":17,
      "name":"Day 2",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nIn the darkness of your room, you fumble around, trying to find a comfortable position.\n\nResting your arm above your forehead, you finally feel some relief from the soreness of your arm. \n\nYou shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nRush to the bathroom\n\nOption 1: Shout for help\nOption 2: Try to get up on your own\n\n \n\nOption 1: Convince her it's not your fault\nOption 2: Stay silent for the rest of the night\n\nGo to the hospital\n",
        "rulesets":[{
          "id":64,
          "name":"Next",
          "start":491,
          "end":510,
          "rules":[{
            "id":106,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":14
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":107,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":65,
          "name":"Action = 0 --> 1",
          "start":292,
          "end":311,
          "rules":[{
            "id":108,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"The urge to go to the toilet overwhelms you. \n\nYou fumble into your pink slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":109,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":110,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":66,
          "name":"Action = 1 --> 2",
          "start":312,
          "end":333,
          "rules":[{
            "id":111,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Waddling as fast as you dare, you shuffle down the stairs and hobbled to the bathroom.\n\nUnbeknownst to you, your slippers catch on a piece of floormat and your feet give way below you.\n\nCollapsed onto a heap on the floor, you need to make a decision about what to do. Fast!\n "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":112,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":113,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":69,
          "name":"Action = 2 --> 3, Option 1: Shout for help",
          "start":334,
          "end":359,
          "rules":[{
            "id":120,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter hears the commotion and rushes out half-dressed. \n\nYou get scolded for not taking care of yourself. \n "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":121,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":122,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":70,
          "name":"Action = 2 --> 3, Option 2: Try yourself",
          "start":359,
          "end":395,
          "rules":[{
            "id":123,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You try to get up on your own, but your legs seems like it does not belong to you.\n\nTo your horror, you realise that you can't feel your legs at all. \n\nTerrible thoughts began to cloud your mind as scenes of elderly dying alone without anyone knowing, flash before your eyes.\n\nYou start shouting for help, hoping your daughter or anyone out there would be able to hear your cries. \n\n\"Save me!\"\n\nAfter what seems like eons later, your daughter hears the commotion and rushes out half-dressed. \n\nYou get scolded for not asking for help. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":124,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":125,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":71,
          "name":"Action = 3 --> 4, Option 1: Convince",
          "start":399,
          "end":442,
          "rules":[{
            "id":126,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Uncle! TTSH A&E! Hurry Up!\"\n\nThe moment the taxi drives off, she starts. \n\n\"It was an accident! *wheeze* \nI didn't do it *wheeze* on purpose. \n*wheeze* Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault! \nI don't need to work already! Get fired by my boss can already! \nMy boss already not happy that I always take urgent leave each time you fall. \nStill don't learn your lesson. \nEVERYTIME also wait until FALL already then say ACCIDENT. \nI NO JOB then you HAPPY already!\"\n\n\"Oh please, this is the first time I fall. Don't lie.\", you thought to yourself.\n\nEnraged, she continues to scold for the entire ride. \n\nBetween breathless pants and the pain, you pity the taxi uncle who's sliding further and further down his seat, pretending not to exist.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":127,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":128,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":72,
          "name":"Action = 3 --> 4, Option 2: Silent",
          "start":442,
          "end":490,
          "rules":[{
            "id":129,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"Uncle! TTSH A&E! Hurry Up!\"\n\nThe moment the taxi drives off, she starts. \n\n\"I don't need to work already! Get fired by my boss can already! \nMy boss already not happy that I always take urgent leave each time you fall. \nStill don't learn your lesson. \nEVERYTIME also wait until FALL already then say ACCIDENT. \nI NO JOB then you HAPPY already!\"\n\n\"Oh please, this is the first time I fall. Don't lie.\", you thought to yourself.\n\nRaging like a volcano, she continues to scold for the entire ride. \n\nBetween breathless pants and the pain, you pity the taxi uncle who's sliding further and further down his seat, pretending not to exist.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":130,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":131,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":74,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":134,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":75,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":135,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":76,
          "name":"Action Result: 3",
          "start":396,
          "end":398,
          "rules":[{
            "id":136,
            "name":"Show",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"As she tries to heave you up, a sharp pain stabs through your chest. \n\nThe sudden impact lands you back on the ground with a solid thump. \n\nEach breath that you take feels like a lance puncturing through your chest. \n\nExhausted and frightened, your daughter frantically runs out of the house to call for help. \n\nWith the help of Uncle Lian and his son, the neighbours next door, they manage to get you onto a taxi. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":77,
          "name":"Action = -1 --> 0",
          "start":278,
          "end":291,
          "rules":[{
            "id":137,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. \n\nYour daughter fumbles around the cabinets near your bed, finding your walking stick.  \n\n\"Hurry up and go to the toilet to wash up. I've got to go to work early today. Don't take your own sweet time.\"\n\nExhausted, you push yourself up from the bed and silently point at the walking stick drapped at the back of the door.\n\nShe picks it up and pass it to you and walks out.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":138,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":14,
      "name":"Hospital",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nThe glass door slides opens with a whoosh. \n\nRushed to the hospital, 7 stitches on your forehead. \nDoctor re-iterates that you have to be careful because of your heart condition. \nDoctor reminds that your blood cannot clot easily so any bleeding might bleed you out and you might die. \nDoctor says that you're lucky that you didnt fracture your hips this time. \n\nOption 1: \"Better that I die than have to suffer through scoldings everyday\" (aggression +1)\nOption 2: Stay silent \n\nGet scolded anyway for not taking care of yourself.\na \nThe doctor refers your daughter to the nurse. \nThe nurse recommends hiring a maid at home, seeing that it's not the first time you've fell in the past month. Elderly are very frail and there should be someone at home looking after you when your daughter goes out to work.\n\nYou silently think to yourself: What a liar. This is the first time you've fell. She just wants to get a commission out of it.\n\nYour daughter asks about subsidies. You tune them out and take a snooze.\n\nGo home",
        "rulesets":[{
          "id":21,
          "name":"Next",
          "start":1052,
          "end":1059,
          "rules":[{
            "id":21,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            }]
          }]
        },{
          "id":89,
          "name":"Retaliate (Aggression)",
          "start":574,
          "end":577,
          "rules":[{
            "id":166,
            "name":"Retaliate (Aggression)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"NOT like *wheeze* I DO it *wheeze* ON purpose *wheeze* RIGHT???*\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":90,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":167,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":91,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":168,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":11,
      "name":"Clock",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nBack in your room, you sit on your bed and wait for time to pass. \n\nNothing happens.\n\nLook at the clock \n\n",
        "rulesets":[{
          "id":38,
          "name":"Look at the clock",
          "start":128,
          "end":145,
          "rules":[{
            "id":60,
            "name":"Clock",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":6
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":66,
            "name":"Hide Clock",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":73,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Continue listening to your life tick away"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            },{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":13
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":39,
          "name":"Clock Result",
          "start":110,
          "end":127,
          "rules":[{
            "id":61,
            "name":"Clock 1, 4 (Bruise)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You play with the little purple spot on your arm. \n\nThis looks new. \n\nPressing it down, the little spot turns white before turning purple again. \n\nThis is fun. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":62,
            "name":"Clock 0, 2 (Toilet)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You hobble your way to the toilet and contemplate about life. \n\nWaddling back to your room, your stomach protests and you wonder if you had lunch yet. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":63,
            "name":"Clock 3,  5 (Food)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Stomach grumbling, you open your bedside cabinet and raid for some crackers.\n\nBelly full and satisfied, you quickly hide the food back into the drawer. \n\n\"Thank goodness I'm smart enough to keep some food here. Else, I would have starved long ago.\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":64,
            "name":"Clock 6 (Phone)",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You wonder why your daughter isn't back from work yet.\n\nDistracted, your fingers play with the white little block that shivers and sing a song once in a while.\n "
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":140,
            "name":"Clock 7 ()",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":7
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"AHA! It's 5 o'clock! Time for my favourite show!\"\n\nYou switch on the TV and catch the latest episode of the soap drama. \n\n\"How can she hit her mother! If that wretched girl was my daughter I would have slapped her long ago. Hmph!\", you think to yourself.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":58,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":100,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":59,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":101,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":4,
      "name":"Day 1",
      "content":{
        "text":"Day: dayNum, Aggresion: AggressionLevel\n\n\nIn the darkness of your room, you fumble around, trying to find a comfortable position.\n\nResting your arm above your forehead, you finally feel some relief from the soreness of your arm. \n\nYou shut your eyes, hoping to get some sleep.\n\nTry to sleep\n\nFind your slippers\n\nWalk to the bathroom\n\nTake a seat in the bathroom\n\nTake your toothbrush\n\nOption 1: The Blue one\nOption 2: The Pink one\n\nOption 1: Convince her it's not your fault\nOption 2: Stay silent while she continue to vent\n\nEat breakfast and hobble back to the room\n",
        "rulesets":[{
          "id":14,
          "name":"Next",
          "start":525,
          "end":567,
          "rules":[{
            "id":14,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":-1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          },{
            "id":69,
            "name":"Hide",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":27,
          "name":"Action = 0 --> 1",
          "start":292,
          "end":311,
          "rules":[{
            "id":29,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You fumble into your pink slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":32,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":89,
            "name":"Hide until Action = 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":29,
          "name":"Action = 1 --> 2",
          "start":312,
          "end":333,
          "rules":[{
            "id":33,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Carefully grabbing onto the handrails, you shuffle down the stairs and hobbled to the bathroom.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":34,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":35,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":30,
          "name":"Action = 2 --> 3",
          "start":334,
          "end":362,
          "rules":[{
            "id":36,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Heaving a sigh, you take a seat on the bathroom bench.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":37,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":38,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":31,
          "name":"Action = 3 --> 4",
          "start":363,
          "end":384,
          "rules":[{
            "id":39,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Sliding open the cabinet, you see two toothbrushes. \n\nWhich one do you take? \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":40,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":41,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":32,
          "name":"Action = 4 --> 5, Option 1: Blue",
          "start":385,
          "end":408,
          "rules":[{
            "id":42,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for using the wrong brush. \n\nThe blue brush is used to scrub the toilet. \n\nDropping the brush like a scalding kettle, you grab the pink brush and try to scrub all the toilet out of your mouth. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":43,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":44,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":34,
          "name":"Action = 4 --> 5, Option 2: Pink",
          "start":408,
          "end":431,
          "rules":[{
            "id":48,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for squishing too much toothpaste.\n\nThe toothpaste slides off the brush and plops onto the basin. \n\nYou stare accusingly at the toothpaste as she berates you further. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":49,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":50,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":36,
          "name":"Action = 5 --> 6, Option 1: Convince",
          "start":432,
          "end":475,
          "rules":[{
            "id":54,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"It was an accident! I didn't do it intentionally. Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault!\"\n\nEnraged, she stomps out of the house and slams the main door. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":55,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":56,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":37,
          "name":"Action = 5 --> 6, Option 2: Silent",
          "start":475,
          "end":524,
          "rules":[{
            "id":57,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You watch warily as she packs her bag and leaves the house for work. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":58,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":59,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":47,
          "name":"Action = -1 --> 0",
          "start":278,
          "end":291,
          "rules":[{
            "id":87,
            "name":"Update response for Action = 0",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":-1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Just then, bright lights blind your eyes. \n\nYour daughter fumbles around the cabinets near your bed, finding your walking stick.  \n\n\"Hurry up and go to the toilet to wash up. I've got to go to work early today. Don't take your own sweet time.\"\n\nExhausted, you push yourself up from the bed and silently point at the walking stick drapped at the back of the door.\n\nShe picks it up and pass it to you and walks out.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":88,
            "name":"Catch Action -1 --> 0",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":0
                }
              }
            }]
          }]
        },{
          "id":60,
          "name":"Aggression Level",
          "start":24,
          "end":40,
          "rules":[{
            "id":102,
            "name":"Aggression Level",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":0
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":61,
          "name":"Day",
          "start":5,
          "end":11,
          "rules":[{
            "id":103,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    }],
    "facts":[{
      "id":3,
      "name":"Node Action",
      "type":"int",
      "initialValue":-1
    },{
      "id":2,
      "name":"DinnerHome_Option",
      "type":"int",
      "initialValue":0
    },{
      "id":6,
      "name":"Counter: Clock",
      "type":"int",
      "initialValue":0
    },{
      "id":1,
      "name":"Counter: Day",
      "type":"int",
      "initialValue":0
    },{
      "id":5,
      "name":"Node ChoiceB",
      "type":"int",
      "initialValue":0
    },{
      "id":4,
      "name":"Node ChoiceA",
      "type":"int",
      "initialValue":0
    },{
      "id":0,
      "name":"Aggression Level",
      "type":"int",
      "initialValue":0
    }],
    "rules":[]
  },
  "plugins":{
    "Default Story Viewer":{
      "zoomLevel":0.8,
      "nodes":[{
        "id":3,
        "x":17.5,
        "y":16.25
      },{
        "id":20,
        "x":372.5,
        "y":533.75
      },{
        "id":16,
        "x":1142.5,
        "y":282.5
      },{
        "id":13,
        "x":1143.75,
        "y":17.5
      },{
        "id":17,
        "x":373.75,
        "y":285.0
      },{
        "id":18,
        "x":765.0,
        "y":527.5
      },{
        "id":14,
        "x":775.0,
        "y":275.0
      },{
        "id":11,
        "x":776.25,
        "y":17.5
      },{
        "id":4,
        "x":380.0,
        "y":17.5
      }]
    }
  }
}