{
  "story":{
    "title":"Untitled",
    "author":"",
    "description":"",
    "metadata":{
      "comments":"",
      "readerStyle":"standard",
      "backDisabled":false,
      "restartDisabled":false
    },
    "nodes":[{
      "id":11,
      "name":"Clock",
      "content":{
        "text":"Day: dayNum\n\nBack in your room, you sit on your bed and wait for time to pass. \n\nNothing happens.\n\nLook at the clock \n\nContinue listening to your life tickle away\n\n",
        "rulesets":[{
          "id":16,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":16,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":18,
          "name":"Next",
          "start":119,
          "end":163,
          "rules":[{
            "id":18,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":13
                }
              }
            }]
          },{
            "id":65,
            "name":"Hide next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":8
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":38,
          "name":"Look at the clock",
          "start":99,
          "end":116,
          "rules":[{
            "id":60,
            "name":"Clock",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":6
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":66,
            "name":"Hide Clock",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":8
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":39,
          "name":"Clock Result",
          "start":81,
          "end":98,
          "rules":[{
            "id":61,
            "name":"Clock 1, 4, 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Nothing happens.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":62,
            "name":"Clock 2, 7",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":7
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You hobble your way to the toilet. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":63,
            "name":"Clock 3, 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":6
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Hungry, you open your bedside cabinet and raid for some crackers.\n\nSatisfied, you quickly hide the food back into the drawer. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":64,
            "name":"Clock 8",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":8
                },
                "fact":{
                  "type":"integerFact",
                  "value":6
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Wonder why your daughter isn't back from work yet.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":4,
      "name":"Toothbrush",
      "content":{
        "text":"Day: dayNum\n\nYour daughter wakes you up before leaving you with instructions to wash up. \n\nFind your slippers\n\nWalk to the bathroom\n\nTake a seat in the bathroom\n\nTake your toothbrush\n\nOption 1: The Blue one\nOption 2: The Pink one\n\nOption 1: Convince her it's not your fault\nOption 2: Stay silent while she continue to vent\n\nEat breakfast and hobble back to the room\n\n",
        "rulesets":[{
          "id":12,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":12,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":14,
          "name":"Next",
          "start":324,
          "end":366,
          "rules":[{
            "id":14,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            }]
          }]
        },{
          "id":27,
          "name":"Action = 0 --> 1",
          "start":91,
          "end":110,
          "rules":[{
            "id":29,
            "name":"Update response for Action = 1",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":0
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You fumble into your pink slippers and shuffle out of the room.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":32,
            "name":"Catch Action 0 --> 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          }]
        },{
          "id":29,
          "name":"Action = 1 --> 2",
          "start":111,
          "end":132,
          "rules":[{
            "id":33,
            "name":"Update response for Action = 2",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Carefully grabbing onto the handrails, you shuffle down the stairs and hobbled to the bathroom.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":34,
            "name":"Catch Action 1 --> 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":35,
            "name":"Hide until Action = 1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":30,
          "name":"Action = 2 --> 3",
          "start":133,
          "end":161,
          "rules":[{
            "id":36,
            "name":"Update response for Action = 3",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Heaving a sigh, you take a seat on the bathroom bench.\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":37,
            "name":"Catch Action 2 --> 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":3
                }
              }
            }]
          },{
            "id":38,
            "name":"Hide until Action = 2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":31,
          "name":"Action = 3 --> 4",
          "start":162,
          "end":183,
          "rules":[{
            "id":39,
            "name":"Update response for Action = 4",
            "stopIfTrue":true,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Sliding open the cabinet, you see two toothbrushes. \n\nWhich one do you take? \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":40,
            "name":"Catch Action 3 --> 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":4
                }
              }
            }]
          },{
            "id":41,
            "name":"Hide until Action = 3",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":32,
          "name":"Action = 4 --> 5, Option 1: Blue",
          "start":184,
          "end":207,
          "rules":[{
            "id":42,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for using the wrong brush. \n\nThe blue brush is used to scrub the toilet. \n\nDropping the brush like a scalding kettle, you grab the pink brush and try to scrub all the toilet out of your mouth. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":43,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          },{
            "id":44,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":34,
          "name":"Action = 4 --> 5, Option 2: Pink",
          "start":207,
          "end":230,
          "rules":[{
            "id":48,
            "name":"Update response for Action = 5",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"Your daughter suddenly pops up beside you. \n\nShe berates you for squishing too much toothpaste.\n\nThe toothpaste slides off the brush and plops onto the basin. \n\nYou stare accusingly at the toothpaste as she berates you further. \n\nYour daughter starts a long lecture about catching a cold and the hefy medical bills. \n\n\"You think I'm very free is it? You can rest at home and watch TV the whole day but somebody needs to go out and pay for your medical bills one ok!\"\n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":49,
            "name":"Catch Action 4 --> 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":5
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":50,
            "name":"Hide until Action = 4",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":4
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":4
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":36,
          "name":"Action = 5 --> 6, Option 1: Convince",
          "start":231,
          "end":274,
          "rules":[{
            "id":54,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"\"It was an accident! I didn't do it intentionally. Why do you always blame me??\"\n\n\"YEAH YEAH YEAH. Not YOUR fault. It's MINE. Everything is MY fault!\"\n\nEnraged, she stomps out of the house and slams the main door. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":55,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":0
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":0
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":56,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        },{
          "id":37,
          "name":"Action = 5 --> 6, Option 2: Silent",
          "start":274,
          "end":323,
          "rules":[{
            "id":57,
            "name":"Update response for Action = 6",
            "stopIfTrue":true,
            "conditionsOp":"and",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":">"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":"You watch warily as she packs her bag and leaves the house for work. \n"
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          },{
            "id":58,
            "name":"Catch Action 5 --> 6",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "inputValue":{
                  "type":"integer",
                  "value":6
                }
              }
            },{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          },{
            "id":59,
            "name":"Hide until Action = 5",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":5
                },
                "fact":{
                  "type":"integerFact",
                  "value":3
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"<"
                }
              }
            },{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":1
                },
                "fact":{
                  "type":"integerFact",
                  "value":5
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "textInput":{
                  "type":"string",
                  "value":""
                },
                "text":{
                  "type":"union",
                  "value":"textInput"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":3,
      "name":"Introducing Grandma",
      "content":{
        "text":"Day: dayNum\n\nIntroduce Grandma and the other characters. \n\n(Remove this when done)\nDay 1: Toothbrush\nDay 2: Toothbrush + Bad News\nDay 3: Accident +Hospital\nDay 4: Discharge + Maid Agency\nDay 5: Wet Clothes + Phone Call\nDay 6: Salt \nDay 7: Bruises\n\nBegin\n\n",
        "rulesets":[{
          "id":0,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":0,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":8,
          "name":"Begin",
          "start":248,
          "end":254,
          "rules":[{
            "id":8,
            "name":"Begin",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":4
                }
              }
            }]
          }]
        }]
      },
      "isStart":true,
      "rules":[]
    },{
      "id":16,
      "name":"The Maid",
      "content":{
        "text":"Day: dayNum\n\nYour daughter knocks on your door, dresses you and puts you on your wheelchair. \nShe drives you to the maid agency. Along the way, she reminds you that if you chase this maid away, you'll get thrown into the nursing home. \n\nYour daughter sits in the office talking to a woman with too much perfume on. She rattles off in English and you furitively glance at the TV in the corner, hoping to catch the 9 o'clock drama on the madarin channel. The TV is talking about some Japanese tour instead. Strange. The lawyer is suppose to confront the killer today. You hope that you'll get home in time to catch that.\n\nAfter what seems like an hour, the perfume woman beams and gestures towards someone. A young girl runs out and greets you. You nod at her and go back to watch the Japanese women soak in a hot spring. You can't remeber if you had taken a shower. You timidly tap on your daughter's shoulder to ask. She brushes you aside.\n\nYou watch as your daughter signs your freedom away. \n\"Why does my life feel like a tragedy?\", you sigh as you think to yourself.\n\nGo home",
        "rulesets":[{
          "id":24,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":26,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":26,
          "name":"Next",
          "start":1071,
          "end":1078,
          "rules":[{
            "id":28,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":13
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":13,
      "name":"Dinner (at home)",
      "content":{
        "text":"Day: dayNum\n\nYour daughter comes home. Finally. \nThe scent of dinner fills the house. \nYou hear the resounding sound of food scooped into the ceremic bowls.\nYour stomach grumbles. \n\nTentatively walk out and sit at the dining table\nSit and wait for your daughter to call you\n\nFrom Option 1: (Nothing happens)\nFrom Option 2: Get scolded for waiting to be served\n\nEat dinner. Finish dinner. \nOption 1: Leave the bowls on the table\nOption 2: Bring the bowls to the basin and wash\n\nFrom Option 1: (Nothing happens)\nFrom Option 2: Get scolded for trying to wash dishes but might break them\n\nGo back inside your room and sleep\n",
        "rulesets":[{
          "id":17,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":17,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":19,
          "name":"DinnerHome_Option1",
          "start":182,
          "end":231,
          "rules":[{
            "id":19,
            "name":"DinnerHome_Option1",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":2
                },
                "inputValue":{
                  "type":"integer",
                  "value":1
                }
              }
            }]
          }]
        },{
          "id":20,
          "name":"DinnerHome_Option2",
          "start":231,
          "end":274,
          "rules":[{
            "id":20,
            "name":"DinnerHome_Option2",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "updateValue":{
                  "type":"union",
                  "value":"inputValue"
                },
                "fact":{
                  "type":"integerFact",
                  "value":2
                },
                "inputValue":{
                  "type":"integer",
                  "value":2
                }
              }
            }]
          }]
        },{
          "id":23,
          "name":"Next",
          "start":585,
          "end":620,
          "rules":[{
            "id":23,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateIntegerFacts",
              "params":{
                "factOperand1":{
                  "type":"integerFact",
                  "value":1
                },
                "operand1":{
                  "type":"union",
                  "value":"factOperand1"
                },
                "updateValue":{
                  "type":"union",
                  "value":"computation"
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"+"
                },
                "operand2":{
                  "type":"union",
                  "value":"userOperand2"
                },
                "userOperand2":{
                  "type":"integer",
                  "value":1
                },
                "computation":{
                  "type":"product",
                  "value":"operand1:operator:operand2"
                }
              }
            }]
          },{
            "id":24,
            "name":"Next Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":2
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":10
                }
              }
            }]
          },{
            "id":25,
            "name":"Next Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[{
              "conditionType":"IntegerFactComparison",
              "params":{
                "input":{
                  "type":"integer",
                  "value":3
                },
                "fact":{
                  "type":"integerFact",
                  "value":1
                },
                "comparisonValue":{
                  "type":"union",
                  "value":"input"
                },
                "operator":{
                  "type":"selectedListValue",
                  "value":"="
                }
              }
            }],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":12
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":10,
      "name":"Morning (Day 2)",
      "content":{
        "text":"Day: dayNum\n\nStruggle to get to the washroom and fall (day 2)\n\n- Your daughter wakes you up before leaving you with instructions to wash up\n- Fumble into your pink slippers and step out of your room\n- Make your way down the stairs and your slippers catch on a piece of carpet \n- Collapsed onto a heap on the floor, you...\n\tOption 1: Shout for help \n\tOption 2: Try to get up on your own\n\nResult:\n\tOption 1: Get scolded for not taking care of yourself\n\tOption 2: Get scolded for not asking for help \n\nOn the way to the hospital, you get scolded for ruining her schedule. \n\tOption 1: Convince them that its not your fault\n\tOption 2: Stay silent for the rest of the ride\n\nNext\n\n\n\n",
        "rulesets":[{
          "id":13,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":13,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        },{
          "id":22,
          "name":"Next",
          "start":668,
          "end":673,
          "rules":[{
            "id":22,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":14
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":14,
      "name":"Hospital",
      "content":{
        "text":"Rushed to the hospital, 7 stitches on your forehead. \nDoctor re-iterates that you have to be careful because of your heart condition. \nDoctor reminds that your blood cannot clot easily so any bleeding might bleed you out and you might die. \nDoctor says that you're lucky that you didnt fracture your hips this time. \n\nOption 1: \"Better that I die than have to suffer through scoldings everyday\" (aggression +1)\nOption 2: Stay silent \n\nGet scolded anyway for not taking care of yourself.\n\nThe doctor refers your daughter to the nurse. \nThe nurse recommends hiring a maid at home, seeing that it's not the first time you've fell in the past month. Elderly are very frail and there should be someone at home looking after you when your daughter goes out to work.\n\nYou silently think to yourself: What a liar. This is the first time you've fell. She just wants to get a commission out of it.\n\nYour daughter asks about subsidies. You tune them out and take a snooze.\n\nGo home",
        "rulesets":[{
          "id":21,
          "name":"Next",
          "start":963,
          "end":970,
          "rules":[{
            "id":21,
            "name":"Next",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"LinkTo",
              "params":{
                "node":{
                  "type":"node",
                  "value":11
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    },{
      "id":12,
      "name":"Morning (Day 3)",
      "content":{
        "text":"Day: dayNum\n\nMaid helps you to the washroom and you end up getting wet (day 3)\n\n- Your daughter wakes you up calls for the maid\n- The maid is ordered to prepare your brush, cup and towels in the toilet for you\n- The maid leaves you to fumble into your pink slippers as she grumbles about having no coffee\n- The maid brings you to the toilet \n- Taking a seat in the bathroom, you notice that the brush that the maid took (blue) is not yours (as understood from Day 1)\n- You (motion to the maid to/ ) slide open the cabinet door and change the brushes before both of you get scolded.\n- The cabinet door slides open and promptly knocks over the cup of water all over your pink pyjamas.\n- Your daughter hears the commotion and rushes down half-dressed. \n- She rages and demands for an explanation. WHAT HAPPENED?\n\tOption 1: Blame the maid\n\tOption 2: It was an accident!\n\nResult:\n\tOption 1: The maid explains that it's your fault. \n\tOption 2: Your daughter doesn't let you complete your sentence\n\nYour daughter orders the maid to clean you up and get you changed. Behind her back, the maid grumbles about how she is ordered to do all these tedious and tiring things. She uncereminously removes your clothes (the toilet door is still open) and leaves you sitting on the seat shivering naked on the toilet seat.\n\nNext",
        "rulesets":[{
          "id":15,
          "name":"Day",
          "start":5,
          "end":12,
          "rules":[{
            "id":15,
            "name":"Day",
            "stopIfTrue":false,
            "conditionsOp":"or",
            "conditions":[],
            "actions":[{
              "actionType":"UpdateText",
              "params":{
                "NumberFactValue":{
                  "type":"integerFact",
                  "value":1
                },
                "text":{
                  "type":"union",
                  "value":"NumberFactValue"
                }
              }
            }]
          }]
        }]
      },
      "isStart":false,
      "rules":[]
    }],
    "facts":[{
      "id":0,
      "name":"Aggression Level",
      "type":"int",
      "initialValue":0
    },{
      "id":1,
      "name":"Day Counter",
      "type":"int",
      "initialValue":0
    },{
      "id":3,
      "name":"Node Action",
      "type":"int",
      "initialValue":0
    },{
      "id":6,
      "name":"Clock",
      "type":"int",
      "initialValue":0
    },{
      "id":5,
      "name":"Morning - OptionB",
      "type":"int",
      "initialValue":0
    },{
      "id":4,
      "name":"Morning - OptionA",
      "type":"int",
      "initialValue":0
    },{
      "id":2,
      "name":"DinnerHome_Option",
      "type":"int",
      "initialValue":0
    }],
    "rules":[]
  },
  "plugins":{
    "Default Story Viewer":{
      "zoomLevel":0.8,
      "nodes":[{
        "id":16,
        "x":1137.5,
        "y":271.25
      },{
        "id":13,
        "x":1142.5,
        "y":15.0
      },{
        "id":10,
        "x":381.25,
        "y":283.75
      },{
        "id":14,
        "x":775.0,
        "y":285.0
      },{
        "id":3,
        "x":17.5,
        "y":17.5
      },{
        "id":11,
        "x":777.5,
        "y":20.0
      },{
        "id":12,
        "x":386.25,
        "y":575.0
      },{
        "id":4,
        "x":380.0,
        "y":20.0
      }]
    }
  }
}